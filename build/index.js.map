{"version":3,"file":"index.js","mappings":";;;;AAAAA,OAAO,CAACC,GAAG,CAAE,eAAgB,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","sources":["webpack://sync-alt-text/./src/sync-alt-text/index.js"],"sourcesContent":["console.log( 'Sync Alt Text' );\n\n/**\n * Sync Alt Text â€“ Gutenberg Editor Notes & Edge Cases\n *\n * 1. On Editor Load:\n *    - Query all blocks (`core/image`, `core/media-text`, `core/cover`, `core/gallery`) recursively.\n *    - For each image block, fetch the image metadata via REST API (or via `wp.data.select('core')`).\n *    - If alt text in `innerHTML` differs from the image's stored alt, update it accordingly.\n \n * 2. On Post Save:\n *    - Iterate over all blocks again and build a map of image ID => alt text from the editor content.\n *    - If the same image is used with different alt texts, use the last one found.\n \n * 3. General Edge Cases:\n *    - Media blocks with missing image IDs (e.g., copied raw HTML or malformed).\n *    - Temporary image placeholders (e.g., when uploading, the ID is not yet available).\n *    - Avoid causing infinite update loops or triggering multiple REST updates per image.\n \n * 4. Performance Considerations:\n *    - Batch metadata fetches where possible.\n *    - Debounce updates if syncing live during editing.\n *    - Use selectors efficiently to avoid scanning the full DOM multiple times.\n \n * Next step:\n * - Scaffold a `@wordpress/plugins` plugin that hooks into `editor.PostEditor` or `@wordpress/data` selectors.\n * - Implement syncing logic on editor load and on `core/editor` save.\n */\n"],"names":["console","log"],"sourceRoot":""}